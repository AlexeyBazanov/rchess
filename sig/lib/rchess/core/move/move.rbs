module Rchess
  class Move
    attr_reader figure: Figure

    attr_reader position_from: Position

    attr_reader position_to: Position

    attr_reader notation: MoveNotation

    attr_reader direction: MoveDirection

    attr_accessor attacked_figure: Figure

    attr_accessor prev_moves: Array[Move]

    attr_accessor barrier_figures: Array[Figure]

    attr_accessor prohibition: MoveProhibition

    attr_accessor can_be_taking_on_pass: bool

    attr_accessor transform_possible: bool

    attr_accessor score: Integer

    def initialize: (Figure figure, Position position_from, Position position_to, ?MoveDirection? direction) -> nil

    def move_set: () -> Array[Move]

    def has_prev_moves?: () -> bool

    def has_barrier_figures?: () -> bool

    def blocked_by?: (Figure figure) -> bool

    def one_opposite_figure_barrier?: () -> bool

    def has_prohibition?: () -> bool

    def has_attacked_figure?: () -> bool

    def attacked_figure_opposite?: () -> bool

    def can_attack?: () -> bool

    def check?: () -> bool

    def covered_check?: () -> bool

    def possible?: () -> bool

    def transform_possible?: () -> bool

    def transform_possible!: () -> nil

    def can_be_taking_on_pass?: () -> bool

    def can_be_taking_on_pass!: () -> nil

    def prohibit!: (MoveProhibition prohibition) -> nil
  end
end